// Generated by CoffeeScript 1.7.1
(function() {
  var PixBlock;

  PixBlock = (function() {
    function PixBlock() {}

    PixBlock.prototype.getBlock = function(callback, optionData) {
      var args, data;
      if (!pixnet.isLogin) {
        pixnet._error('Need login');
        return this;
      }
      data = {
        access_token: pixnet.getData('accessToken')
      };
      data = pixnet._extends(data, optionData);
      args = arguments;
      pixnet._get('https://emma.pixnet.cc/blocks', {
        data: data,
        done: (function(_this) {
          return function(data) {
            if (callback) {
              return callback(JSON.parse(data));
            }
          };
        })(this),
        fail: (function(_this) {
          return function(data) {
            return pixnet.apiInvalidGrantFunc(function() {
              return _this.getBlock.apply(_this, args);
            }, data, args);
          };
        })(this)
      });
      return this;
    };

    PixBlock.prototype.createBlock = function(callback, userName, optionData) {
      var args, data;
      if (!pixnet.isLogin) {
        pixnet._error('Need login');
        return this;
      }
      data = {
        user: userName,
        access_token: pixnet.getData('accessToken')
      };
      data = pixnet._extends(data, optionData);
      args = arguments;
      pixnet._post('https://emma.pixnet.cc/blocks/create', {
        data: data,
        done: (function(_this) {
          return function(data) {
            if (callback) {
              return callback(JSON.parse(data));
            }
          };
        })(this),
        fail: (function(_this) {
          return function(data) {
            return pixnet.apiInvalidGrantFunc(function() {
              return _this.createBlock.apply(_this, args);
            }, data, args);
          };
        })(this)
      });
      return this;
    };

    PixBlock.prototype.deleteBlock = function(callback, userName, optionData) {
      var args, data;
      if (!pixnet.isLogin) {
        pixnet._error('Need login');
        return this;
      }
      data = {
        user: userName,
        access_token: pixnet.getData('accessToken')
      };
      data = pixnet._extends(data, optionData);
      args = arguments;
      pixnet._delete('https://emma.pixnet.cc/blocks/delete', {
        data: data,
        done: (function(_this) {
          return function(data) {
            if (callback) {
              return callback(JSON.parse(data));
            }
          };
        })(this),
        fail: (function(_this) {
          return function(data) {
            return pixnet.apiInvalidGrantFunc(function() {
              return _this.deleteBlock.apply(_this, args);
            }, data, args);
          };
        })(this)
      });
      return this;
    };

    return PixBlock;

  })();

  pixnet.block = new PixBlock();

}).call(this);
